# Awaiting response on https://github.com/jupyter/jupyter_console/issues/207
exit 1

set -u -e

# - Current directory is mounted to /cwd, and the command is executed there
#  - For now, direct Redis access is assumed, via the Redis port 6379
#    NOTE: THIS IS A BIG SECURITY HOLE, IT ALLOWS CORRUPTION AND SNOOPING OF THE DATABASE
#  - The share server listens on 0.0.0.0, because I can't find out 
#      how Docker Bridge rewrites the IP address origin
#    NOTE: THIS IS A BIG SECURITY HOLE IF YOUR EPHEMERAL PORTS ARE VISIBLE TO THE OUTSIDE

seamlessdir=`python3 -c 'import seamless,os;print(os.path.dirname(seamless.__file__))'`/../

bridge_ip=$(docker network inspect bridge \
  | python3 -c '''
import json, sys 
bridge = json.load(sys.stdin)
print(bridge[0]["IPAM"]["Config"][0]["Gateway"])
''')

name=$1
communion_incoming=${SEAMLESS_COMMUNION_INCOMING}
c=$(docker run --rm \
  --detach \
  --name $name \
  -v $seamlessdir:/seamless \
  -e "PYTHONPATH=/seamless" \
  -e "REDIS_HOST="$bridge_ip \
  -e "SHARESERVER_ADDRESS=0.0.0.0" \
  -e "SEAMLESS_COMMUNION_ID="$name \
  -e "SEAMLESS_COMMUNION_INCOMING="$communion_incoming \
  --expose 5813 \
  --expose 5138 \
  -P \
  -v `pwd`:/cwd \
  --workdir /cwd \
  -u jovyan \
  seamless-devel jupyter console /home/jovyan/seamless-scripts/serve-graph.py -- \
    $2 --redis --ncores 0 \
    --communion_id $name \
    --interactive \
)

docker port $name
